version: "3.8"

services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
  redis:
    image: redis:6-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
  web:
    build: .
    container_name: fastapi_app
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: ${DATABASE_URL} 
    ports:
      - "8000:8000"
    env_file:
      - .env
  celery_worker:
    container_name: celery_worker
    build: .
    command: celery -A app.celery_worker.celery worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - web
      - redis
  frontend:
    build:
      context: ./frontend 
    container_name: frontend_app
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - web
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8000
    env_file:
    - ./frontend/.env
  flower:
    container_name: flower
    build: .
    command: celery -A app.celery_worker.celery flower --port=5555
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - web
      - redis
      - celery_worker
volumes:
  postgres_data:
